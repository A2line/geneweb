Proposal to integrate Algolia search into GeneWeb

Algolia is a cloud based Saas solution to faceted search.
It offers a free service for open source applications.
This note describes what it would take to integrate Algolia search into GeneWeb.

I have a manually managed trial setup for evaluation.
It can be tested on https://demo.geneweb.tuxfamily.org/gw7/gwd?b=Grimaldi700;
This demo is imperfetc as links to persons and images are not operative (they point to my localhost version of 

1/ records
Algolia's solution si based on records and attributes. For GeneWeb, a record would hold
all the information about a person, attributes being the kind of information:
- surname and surname aliases
- url
- firstname, firstname aliases, aliases, nickname
- image url
- dates (birth, baptism, death, burial, marraiges, events)
- locations (birth, baptism, death, burial, marraiges, events)
- notes
- sources
- hash
Note that none of the attribute refer to another person. This may seem to limit the query 
capabilities, but is essential to avoid updates explosions.

2/ facets
Each attribute is a facet (as per Algolia proposal). Search can be done across
the whole record, and/or refined through facets.

3/ queries
Queries can be of two kinds:
- simple (word1 word2 word3) meaning words1 OR word2 OR word3
- complex (word1 "word2" -word3) meaning maybe word1, certainly word2 AND NOT word3
See Algolia for details.

4/ Updating
The following needs to be done in the GeneWeb context to operate effectively.
- Init: a tool needs to be written, producing all the records of a base, and 
  pushing them to Algolia. This tool must accomodate the potentially large size
  of a base and Algolia's limitation on push chunks (10Mo).
- Check: a tool to verify the coherence between an index and a base. 
  Scan the base, compute the hash of each record, verify that it matches with the index.
- Manage: an interface to remotely manage the index
- Update:
  Several of GeneWeb functions result in a record undate, deletion or creation:
  - updating one person (one update)
  - merging two persons (one update and one delete)
  - adding parents (several creations depending on new parents and new children)
  - updating family (several creation depending on new children)
Note that GeneWeb offers the possibility to execute a function at each update
(see notify_change in the .gwf file). 
To be verified: does this cater for multiple record creation?

5/ Security
Security is an important issue that must be taken into considerations. Algolia is 
very careful in controlling access to the indexes it serves in the cloud and 
provides mechanisms to cater for multi level security.
The case of Roglo is a good test case.
On first analysis, one solution is to maintain two index, one for visitors and 
one for friends and wizards. The basename.gwf file will contain one or two apiKeys 
associated with each index. The algolia_search.txt file obtains the correct apiKey
and indexname according to the status of the user.
It is possible to organise the queries of friends and wizards to query two index
(the public and the private one), but in such a setup, results are not ranked across
the two index resulting in somewhat less significant results.

6/ Future
Delivering this solution across GeneWeb users is not trivial given the SaaS option 
of Algolia and the necessity of obtaining appId and apiKeys. I will explore with Algolia
what they mean by "free for Open source", and to what extent it allows a widespread distribution.
The case of Roglo (and of other few large GeneWeb bases like pierfit) is a separate issue.
GeneaNet is not part of this analysis. Given their commercial position, they fall into
the "regular customer" category. 

7/ Alternatives
Alternatives are possible, using open source solutions such as Lucene. Exploring
and deploying such alternatives is a somewhat larger project which I am not ready 
to embark upon. Algolia's ease of use has really shown its power.
